
name: 'Build and Deploy Demo Environment'
on: workflow_dispatch
    
  #push:
    #branches:
  #  - main
   # paths:
   # - '_build_flag'

#
jobs:
  Pipeline-Job:
    # Configure Environment
    
    name: 'Deploy Terraform'
    runs-on: ubuntu-latest
    env:
   # These variables are required
      SNYK_IAC_CAPTURE_API_REST_URL: https://api.snyk.io
      SNYK_IAC_CAPTURE_API_REST_TOKEN: ${{ secrets.SNYK_TOKEN }} 
      SNYK_IAC_CAPTURE_ORG: ${{ secrets.SNYK_ORG}}
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} 
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

        
    # Checkout Code   

    steps:
    - name: Checkout
      uses: actions/checkout@v3

        
    # Install the latest version of Terraform CLI

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        cli_config_credentials_token: ${{ secrets.TERRAFORM_API_KEY }}
        terraform_wrapper: false

    
    ###### Configure Snyk Environment ######

    # Define AWS Configuration for onboarding

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # Onboard Cloud Environment to Snyk Cloud

    - name: Onboard Cloud Environment to Snyk Cloud
      shell: bash
      run: |
        mkdir temp
        cd temp
        curl -X POST \
        'https://api.snyk.io/rest/orgs/${{ secrets.SNYK_ORG }}/cloud/permissions?version=2023-03-08~beta' \
        -H 'Authorization: token ${{ secrets.SNYK_TOKEN }}' \
        -H 'Content-Type:application/vnd.api+json' -d '{
            "data": {
                "attributes": {
                    "type": "tf",
                    "platform": "aws"
                },
                "type": "permissions"
            }
        }' | jq -r .data.attributes.data > snyk_provision.tf
        terraform init
        terraform apply -auto-approve
        out=$(terraform output -json |jq .role_arn.value | tr -d \" )
        echo "ROLE_ARN=$(echo "${out}")" >> $GITHUB_ENV
        sleep 10


    # Cleanup

    - name: Cleanup
      shell: bash
      run: |
        cd ../    
        rm -rf temp


    # Create Snyk Cloud Environment

    - name: Create Snyk Cloud Environment
      run : |
           curl -X POST 'https://api.snyk.io/rest/orgs/${{ secrets.SNYK_ORG }}/cloud/environments?version=2022-12-21~beta'  -H 'Authorization: token ${{ secrets.SNYK_TOKEN }}'  -H 'Content-Type:application/vnd.api+json' -d '{ "data": { "attributes": { "kind": "aws", "name": "Snyk Cloud Demo AWS Environment", "options": { "role_arn": "${{ env.ROLE_ARN }}" } }, "type": "environment" } }'



    # Get Snyk Cloud Environment ID
    - name: Get Snyk Cloud Environment ID
      run : |
           out=$(curl -X GET 'https://api.snyk.io/rest/orgs/${{ secrets.SNYK_ORG }}/cloud/environments?version=2022-12-21~beta' -H 'Authorization: token ${{ secrets.SNYK_TOKEN }}' | jq -c --arg key "aws" '.data[] | select (.attributes.kind=="aws")' | jq .id | tr -d \" )
           echo "SNYK_CLOUD_ID=$(echo "${out}")" >> $GITHUB_ENV
           

    ##### Deploy and Scan Vulnerable Terraform #####

    # Report on IaC

    - name: Run Snyk Report
      run : |
           curl -sSL -o /usr/local/bin/snyk https://static.snyk.io/cli/latest/snyk-linux
           chmod +x /usr/local/bin/snyk
           snyk iac test --report --target-reference=$(git branch --show-current) --org=${{ secrets.SNYK_ORG }} -d 
      continue-on-error: true


    # Trigger Terraform Cloud to initialize vulnerable environment    

    - name: Terraform Init
      run: terraform init


    # Deploy Vulnerable Environment
  
    - name: Terraform Apply
      run: terraform apply -auto-approve


    # Pull Terraform State file for inspection by Snyk

    - name: Terraform state pull
      run: terraform state pull > tfcloud.tfstate 


    # Snyk IaC Capture

    - name: Setup Snyk capture cli
      shell: bash
      run: |
       curl -sSL -o /usr/local/bin/snyk-iac-capture https://static.snyk.io/cli/iac/capture/v0.1.1/snyk-iac-capture_Linux_x86_64
       chmod +x /usr/local/bin/snyk-iac-capture


    # Snyk IaC Capture     

    - name: Snyk IAC Capture
      run: snyk-iac-capture -d --path tfcloud.tfstate 


    # Kick off Snyk Cloud Rescan

    - name: Rescan Cloud Environment
      run : |
          curl -X POST \
          'https://api.snyk.io/rest/orgs/${{ secrets.SNYK_ORG }}/cloud/scans?version=2022-12-21~beta' \
          -H 'Authorization: token ${{ secrets.SNYK_TOKEN }}' \
          -H "Content-Type:application/vnd.api+json"  -d '{ "data": { "relationships": { "environment": { "data": { "id": "${{ env.SNYK_CLOUD_ID }}", "type": "environment" } } }, "type": "resource" } }'
                                                      

